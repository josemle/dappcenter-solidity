version: 2.1
jobs:
  init: # checkout and auto-lint
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      # Checkout code & persist
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - persist_to_workspace:
          root: '..'
          paths:
            - repo

      # npm i ./
      #- restore_cache:
      #    keys:
      #      - v2-{{ checksum "package.json" }}
      - run: npm i --production --ignore-scripts
      #- save_cache:
      #    paths:
      #      - node_modules
      #      - package-lock.json
      #    key: v2-{{ checksum "package.json" }}

      # Lint and commit any changes, which may restart the build
      - run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      - run: npm run lint # includes --fix
      - run: bash .circleci/commit.sh
      
      # npm i ./ethereum
      #- restore_cache:
      #    keys:
      #      - v2-{{ checksum "ethereum/package.json" }}
      - run: cd ethereum && npm i --production
      - save_cache:
          paths:
            - ethereum/node_modules
            - ethereum/package-lock.json
          key: v2-{{ checksum "ethereum/package.json" }}

      # Compile Ethereum contracts
      - run: cd ethereum && npm run compile
      
      # npm i ./tron
      #- restore_cache:
      #    keys:
      #      - v2-{{ checksum "tron/package.json" }}
      - run: cd tron && npm i --production
      - save_cache:
          paths:
            - tron/node_modules
            - tron/package-lock.json
          key: v2-{{ checksum "tron/package.json" }}

      # Compile Tron contracts
      - run: cd tron && npm run compile

      # npm i ./library
      #- restore_cache:
      #    keys:
      #      - v2-{{ checksum "library/package.json" }}
      - run: cd library && npm i --production
      - save_cache:
          paths:
            - library/node_modules
            - library/package-lock.json
          key: v2-{{ checksum "library/package.json" }}

      # Persist contract builds
      - persist_to_workspace:
          root: '..'
          paths:
            - repo/tron/build
            - repo/ethereum/build

  ethereum:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      # Get code & contract builds
      - attach_workspace:
          at: '../'

      # Get npm i ./library
      - restore_cache:
          keys:
            - v2-{{ checksum "library/package.json" }}

      # Get npm i ./ethereum
      - restore_cache:
          keys:
            - v2-{{ checksum "ethereum/package.json" }}

      # Test Ethereum contracts
      - run: cd ethereum && npm run test

  tron:
    docker:
      - image: circleci/node:10
      - image: trontools/quickstart
        environment:
          showQueryString: "true"
          showBody: "true"
          formatJson: "true"
          allowTvmTransferTrc10: "1"
    working_directory: ~/repo
    steps:
      # Get code & contract builds
      - attach_workspace:
          at: '../'

      # Get npm i ./library
      - restore_cache:
          keys:
            - v2-{{ checksum "library/package.json" }}

      # Get npm i ./tron
      - restore_cache:
          keys:
            - v2-{{ checksum "tron/package.json" }}

      # Test Tron contracts
      - run: cd tron && npm run test

  push:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      # Get code & contract builds
      - attach_workspace:
          at: '..'
          
      # Get npm i ./library
      - restore_cache:
          keys:
            - v2-{{ checksum "library/package.json" }}
      
      # Disabled!
      # Deploy contracts
      #- run: cd library && npm run deploy

      # Push artifact changes
      #- run: mkdir ~/.ssh
      #- run: ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      #- run: bash .circleci/deploy-artifacts.sh

workflows:
  build:
    jobs:
      - init:
          filters:
            branches:
              ignore:
                - gh-pages
                - artifacts
      - ethereum:
          requires:
            - init
      - tron:
          requires:
            - init
      - push:
          filters:
            branches:
              only:
                - master
          requires:
            - init
            - ethereum
            - tron
